os:
  - "{{conf.os}}"
dist: "{{conf.dist}}"

language: rust
sudo: required
cache: {{conf.cache}}

rust:
  - stable
  - beta
  - nightly

env:
  global:
    - RUN_TEST=true
    - RUN_CLIPPY=false
    - RUN_BENCH=false
    {%- for c in conf.additional_matrix_entries %}
    - RUN_{{ c.0.to_ascii_uppercase() }}=false
    {%- endfor %}

matrix:
  fast_finish: true
  include:
    {%- if conf.rustfmt.run %}
    - &rustfmt_build
      rust: "{{conf.rustfmt.version}}"
      env:
        - RUN_RUSTFMT=true
        - RUN_TEST=false
    {%- endif %}
    {%- if conf.bench.run %}
    - &bench_build
      rust: "{{conf.bench.version}}"
      env:
        - RUN_BENCH=true
        - RUN_TEST=false
    {%- endif %}
    {%- if conf.clippy.run %}
    - &clippy_build
      rust: "{{conf.clippy.version}}"
      env:
        - RUN_CLIPPY=true
        - RUN_TEST=false
    {%- endif %}
    {%- for c in conf.additional_matrix_entries %}
    - &{{c.0}}
      rust: "{{c.1.version}}"
      env:
        - "RUN_TEST=false"
        - "RUN_{{c.0.to_ascii_uppercase()}}=true"
    {%- endfor %}
  allow_failures: {% if !conf.has_any_allowed_failures() %}[]{% endif %}
    {%- if conf.bench.run && conf.bench.allow_failure %}
    - *bench_build
    {%- endif %}
    {%- if conf.clippy.run && conf.clippy.allow_failure %}
    - *clippy_build
    {%- endif %}
    {%- if conf.rustfmt.run && conf.rustfmt.allow_failure %}
    - *rustfmt_build
    {%- endif %}

before_script:
  {%- if conf.rustfmt.run %}
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      rustup component add rustfmt-preview
      ;
    fi'
  {%- endif %}
  {%- if conf.clippy.run %}
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      rm -f ~/.cargo/bin/clippy;
      rustup component add clippy-preview
      ;
    fi'
  {%- endif %}
  {%- for c in conf.additional_matrix_entries %}
  {%- if c.1.install_commandline.is_some() %}
  - bash -c 'if [[ "$RUN_{{c.0.to_ascii_uppercase()}}" == "true" ]]; then
      {{c.1.install_commandline.as_ref().unwrap().as_str()}}
      ;
    fi'
  {%- endif %}
  {%- endfor %}

script:
  - bash -c 'if [[ "$RUN_TEST" == "true" ]]; then
      {{conf.test_commandline.as_str()}}
      ;
    fi'
  {%- if conf.rustfmt.run %}
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      cargo fmt -v -- --check
      ;
    fi'
  {%- endif %}
  {%- if conf.bench.run %}
  - bash -c 'if [[ "$RUN_BENCH" == "true" ]]; then
      cargo bench
      ;
    fi'
  {%- endif %}
  {%- if conf.clippy.run %}
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      cargo clippy -- -D warnings
      ;
    fi'
  {%- endif %}
  {%- for c in conf.additional_matrix_entries %}
  - bash -c 'if [[ "$RUN_{{c.0.to_ascii_uppercase()}}" == "true" ]]; then
      {{c.1.commandline.as_str()}}
      ;
    fi'
  {%- endfor %}

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
