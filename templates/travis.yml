dist: "{{dist}}"
language: rust
sudo: required
cache: cargo

rust:
  - stable
  - beta
  - nightly

os:
  - linux

env:
  global:
    - RUN_TEST=true
    - RUN_CLIPPY=false
    - RUN_BENCH=false

matrix:
  fast_finish: true
  include:
    {%- if run_rustfmt %}
    - rust: "{{rustfmt_version}}"
      env:
        - RUN_RUSTFMT=true
        - RUN_TEST=false
    {%- endif %}
    {%- if run_benchmark %}
    - rust: "{{benchmark_version}}"
      env:
        - RUN_BENCHMARK=true
        - RUN_TEST=false
    {%- endif %}
    {%- if run_clippy %}
    - rust: "{{clippy_version}}"
      env:
        - RUN_CLIPPY=true
        - RUN_TEST=false
    {%- endif %}
  allow_failures: [] # TODO

before_script:
  {%- if run_rustfmt %}
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      rustup component add rustfmt-preview
      ;
    fi'
  {%- endif %}
  {%- if run_clippy %}
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      rm -f ~/.cargo/bin/clippy;
      cargo install --force clippy-nightly
      ;
    fi'
  {%- endif %}

script:
  - bash -c 'if [[ "$RUN_TEST" == "true" ]]; then
      cargo test
      ;
    fi'
  {%- if run_rustfmt %}
  - bash -c 'if [[ "$RUN_RUSTFMT" == "true" ]]; then
      cargo fmt -v -- --check
      ;
    fi'
  {%- endif %}
  {%- if run_benchmark %}
  - bash -c 'if [[ "$RUN_BENCH" == "true" ]]; then
      cargo bench
      ;
    fi'
  {%- endif %}
  {%- if run_clippy %}
  - bash -c 'if [[ "$RUN_CLIPPY" == "true" ]]; then
      cargo clippy -- -D warnings
      ;
    fi'
  {%- endif %}

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
